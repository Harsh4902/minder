"use strict";(self.webpackChunkstacklok=self.webpackChunkstacklok||[]).push([[9142],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>y});var i=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},o=Object.keys(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=i.createContext({}),p=function(e){var t=i.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},m=function(e){var t=p(e.components);return i.createElement(c.Provider,{value:t},e.children)},d="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,m=a(e,["components","mdxType","originalType","parentName"]),d=p(r),u=n,y=d["".concat(c,".").concat(u)]||d[u]||s[u]||o;return r?i.createElement(y,l(l({ref:t},m),{},{components:r})):i.createElement(y,l({ref:t},m))}));function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=u;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a[d]="string"==typeof e?e:n,l[1]=a;for(var p=2;p<o;p++)l[p]=r[p];return i.createElement.apply(null,l)}return i.createElement.apply(null,r)}u.displayName="MDXCreateElement"},6839:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>s,frontMatter:()=>o,metadata:()=>a,toc:()=>p});var i=r(7462),n=(r(7294),r(3905));const o={},l=void 0,a={unversionedId:"cli/medic_policy",id:"cli/medic_policy",title:"medic_policy",description:"medic policy",source:"@site/docs/cli/medic_policy.md",sourceDirName:"cli",slug:"/cli/medic_policy",permalink:"/cli/medic_policy",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"mediator",previous:{title:"medic_org_list",permalink:"/cli/medic_org_list"},next:{title:"medic_policy_create",permalink:"/cli/medic_policy_create"}},c={},p=[{value:"medic policy",id:"medic-policy",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3},{value:"Auto generated by spf13/cobra on 13-Jul-2023",id:"auto-generated-by-spf13cobra-on-13-jul-2023",level:6}],m={toc:p},d="wrapper";function s(e){let{components:t,...r}=e;return(0,n.kt)(d,(0,i.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"medic-policy"},"medic policy"),(0,n.kt)("p",null,"Manage policies within a mediator control plane"),(0,n.kt)("h3",{id:"synopsis"},"Synopsis"),(0,n.kt)("p",null,"The medic policy subcommands allows the management of policies within\na mediator controlplane."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"medic policy [flags]\n")),(0,n.kt)("h3",{id:"options"},"Options"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"  -h, --help   help for policy\n")),(0,n.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'      --config string      config file (default is $PWD/config.yaml)\n      --grpc-host string   Server host (default "localhost")\n      --grpc-port int      Server port (default 8090)\n')),(0,n.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/cli/medic"},"medic"),"\t - medic controls mediator via the control plane"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/cli/medic_policy_create"},"medic policy create"),"\t - Create a policy within a mediator control plane"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/cli/medic_policy_delete"},"medic policy delete"),"\t - delete a policy within a mediator controlplane"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/cli/medic_policy_get"},"medic policy get"),"\t - Get details for a policy within a mediator control plane"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/cli/medic_policy_list"},"medic policy list"),"\t - List policies within a mediator control plane")),(0,n.kt)("h6",{id:"auto-generated-by-spf13cobra-on-13-jul-2023"},"Auto generated by spf13/cobra on 13-Jul-2023"))}s.isMDXComponent=!0}}]);