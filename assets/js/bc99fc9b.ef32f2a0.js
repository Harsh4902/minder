"use strict";(self.webpackChunkstacklok=self.webpackChunkstacklok||[]).push([[9933],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>m});var i=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function n(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);r&&(i=i.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,i)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?n(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function a(e,r){if(null==e)return{};var t,i,o=function(e,r){if(null==e)return{};var t,i,o={},n=Object.keys(e);for(i=0;i<n.length;i++)t=n[i],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(i=0;i<n.length;i++)t=n[i],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=i.createContext({}),l=function(e){var r=i.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},c=function(e){var r=l(e.components);return i.createElement(p.Provider,{value:r},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return i.createElement(i.Fragment,{},r)}},g=i.forwardRef((function(e,r){var t=e.components,o=e.mdxType,n=e.originalType,p=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),d=l(t),g=o,m=d["".concat(p,".").concat(g)]||d[g]||u[g]||n;return t?i.createElement(m,s(s({ref:r},c),{},{components:t})):i.createElement(m,s({ref:r},c))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var n=t.length,s=new Array(n);s[0]=g;var a={};for(var p in r)hasOwnProperty.call(r,p)&&(a[p]=r[p]);a.originalType=e,a[d]="string"==typeof e?e:o,s[1]=a;for(var l=2;l<n;l++)s[l]=t[l];return i.createElement.apply(null,s)}return i.createElement.apply(null,t)}g.displayName="MDXCreateElement"},15583:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>s,default:()=>u,frontMatter:()=>n,metadata:()=>a,toc:()=>l});var i=t(87462),o=(t(67294),t(3905));const n={id:"register_repos",title:"Register Repositories",sidebar_position:2,slug:"/register_repos",displayed_sidebar:"mediator"},s=void 0,a={unversionedId:"getting_started/register_repos",id:"getting_started/register_repos",title:"Register Repositories",description:"Register repositories",source:"@site/docs/getting_started/register_repos.md",sourceDirName:"getting_started",slug:"/register_repos",permalink:"/register_repos",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"register_repos",title:"Register Repositories",sidebar_position:2,slug:"/register_repos",displayed_sidebar:"mediator"},sidebar:"mediator",previous:{title:"Login with Medic",permalink:"/run-the-login_medic"},next:{title:"Profile Introduction",permalink:"/profile_introduction"}},p={},l=[{value:"Register repositories",id:"register-repositories",level:2},{value:"List and Get Repositories",id:"list-and-get-repositories",level:2}],c={toc:l},d="wrapper";function u(e){let{components:r,...t}=e;return(0,o.kt)(d,(0,i.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"register-repositories"},"Register repositories"),(0,o.kt)("p",null,"Now that you have enrolled with GitHub as a provider, you can now register repositories. We will use the ",(0,o.kt)("inlineCode",{parentName:"p"},"repo")," command."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"medic repo register --provider github \n")),(0,o.kt)("p",null,"You can also register a repository (or set of repositories) by name:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'medic repo register --provider github --repo "owner:repo1,owner:repo2"\n')),(0,o.kt)("p",null,"A webhook will now be created in each repository, and selected repositories will be considered registered within Mediator. Any events that now occur in any registered repository will be sent to Mediator, and processed accordingly."),(0,o.kt)("h2",{id:"list-and-get-repositories"},"List and Get Repositories"),(0,o.kt)("p",null,"You can list all repositories registered in Mediator:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"medic repo list -n github\n")),(0,o.kt)("p",null,"You can also get a specific repository:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"medic repo get -n github -r {$repo_id}\n")))}u.isMDXComponent=!0}}]);