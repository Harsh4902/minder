"use strict";(self.webpackChunkstacklok=self.webpackChunkstacklok||[]).push([[4822],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(r),m=i,f=c["".concat(s,".").concat(m)]||c[m]||d[m]||o;return r?n.createElement(f,a(a({ref:t},u),{},{components:r})):n.createElement(f,a({ref:t},u))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:i,a[1]=l;for(var p=2;p<o;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},15382:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=r(87462),i=(r(67294),r(3905));const o={title:"Automatic Remediations",sidebar_position:20},a=void 0,l={unversionedId:"tutorials/remediations",id:"tutorials/remediations",title:"Automatic Remediations",description:"Goal",source:"@site/docs/tutorials/remediations.md",sourceDirName:"tutorials",slug:"/tutorials/remediations",permalink:"/tutorials/remediations",draft:!1,tags:[],version:"current",sidebarPosition:20,frontMatter:{title:"Automatic Remediations",sidebar_position:20},sidebar:"minder",previous:{title:"Registering repositories and creating profiles",permalink:"/tutorials/register_repo_create_profile"},next:{title:"Enabling pull request reviews",permalink:"/how-to/pr_reviews"}},s={},p=[{value:"Goal",id:"goal",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Creating a profile with <code>remediate: on</code>",id:"creating-a-profile-with-remediate-on",level:2},{value:"Current limitations",id:"current-limitations",level:2}],u={toc:p},c="wrapper";function d(e){let{components:t,...r}=e;return(0,i.kt)(c,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"goal"},"Goal"),(0,i.kt)("p",null,"The goal of this tutorial is to show how Minder can ensure\nthat enrolled repos have secret scanning enabled.  Secret scanning is\none of several settings which can be managed by Minder.  When you\napply a Minder profile to enrolled repositories, it will remediate (fix)\nthe setting if it is changed to violate the profile."),(0,i.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("p",null,"In order to follow the tutorial, ensure that you have completed the tutorial on\n",(0,i.kt)("a",{parentName:"p",href:"/tutorials/register_repo_create_profile"},"registering repositories")," first."),(0,i.kt)("h2",{id:"creating-a-profile-with-remediate-on"},"Creating a profile with ",(0,i.kt)("inlineCode",{parentName:"h2"},"remediate: on")),(0,i.kt)("p",null,"At the moment, Minder doesn't support editing profiles. In order to create the\nsame profile with ",(0,i.kt)("inlineCode",{parentName:"p"},"remediate: on"),", you need to delete the existing profile and create\na new one."),(0,i.kt)("p",null,"Get the currently installed profiles:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"minder profile list --provider=github\n")),(0,i.kt)("p",null,"Find the ID of the profile you want to remove and delete it:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"minder profile delete -i $ID\n")),(0,i.kt)("p",null,"Edit the YAML file of the profile you want to use and set the ",(0,i.kt)("inlineCode",{parentName:"p"},"remediate")," attribute to\nto ",(0,i.kt)("inlineCode",{parentName:"p"},"on"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'---\nversion: v1\ntype: profile\nname: github-profile\ncontext:\n  provider: github\nalert: "on"\nremediate: "on"\nrepository:\n  - type: secret_scanning\n    def:\n      enabled: true\n')),(0,i.kt)("p",null,"Create the profile in Minder:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"minder profile create -f profile.yaml\n")),(0,i.kt)("p",null,"Check the status of the profile:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"minder profile_status list --profile github-profile\n")),(0,i.kt)("p",null,'With remediation on, the profile status should be "Success" when the repository has been updated to match the profile.\nIf you navigate to your repository settings with your browser, you should see that secret scanning\nfeature is enabled. Toggling the feature off should trigger a new profile status check and the\nsecret scanning feature should be enabled again in github.'),(0,i.kt)("h2",{id:"current-limitations"},"Current limitations"),(0,i.kt)("p",null,"At the time of writing, not all ",(0,i.kt)("inlineCode",{parentName:"p"},"rule_type")," objects support remediation. To find out which\ndo, you can run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"minder rule_type get -i $ID -oyaml\n")),(0,i.kt)("p",null,"and look for the ",(0,i.kt)("inlineCode",{parentName:"p"},"remediate")," attribute. If it's not present, the rule type doesn't support\nremediation. Alternatively, browse the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/stacklok/minder-rules-and-profiles/tree/main/rule-types/github"},"rule types directory"),"\nof the minder-rules-and-profiles repository."),(0,i.kt)("p",null,"Furthermore, remediations that open a pull request such as the ",(0,i.kt)("inlineCode",{parentName:"p"},"dependabot")," rule type only attempt\nto replace the target file, overwriting its contents. This means that if you want to keep the current\nchanges, you need to merge the contents manually."))}d.isMDXComponent=!0}}]);