"use strict";(self.webpackChunkstacklok=self.webpackChunkstacklok||[]).push([[5351],{3905:(e,t,i)=>{i.d(t,{Zo:()=>m,kt:()=>f});var r=i(7294);function a(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function n(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?n(Object(i),!0).forEach((function(t){a(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):n(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,r,a=function(e,t){if(null==e)return{};var i,r,a={},n=Object.keys(e);for(r=0;r<n.length;r++)i=n[r],t.indexOf(i)>=0||(a[i]=e[i]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)i=n[r],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},m=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var i=e.components,a=e.mdxType,n=e.originalType,c=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),d=p(i),u=a,f=d["".concat(c,".").concat(u)]||d[u]||s[u]||n;return i?r.createElement(f,o(o({ref:t},m),{},{components:i})):r.createElement(f,o({ref:t},m))}));function f(e,t){var i=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=i.length,o=new Array(n);o[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[d]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<n;p++)o[p]=i[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,i)}u.displayName="MDXCreateElement"},570:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>s,frontMatter:()=>n,metadata:()=>l,toc:()=>p});var r=i(7462),a=(i(7294),i(3905));const n={},o=void 0,l={unversionedId:"cli/medic",id:"cli/medic",title:"medic",description:"medic",source:"@site/docs/cli/medic.md",sourceDirName:"cli",slug:"/cli/medic",permalink:"/cli/medic",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"mediator",previous:{title:"Protocol Documentation",permalink:"/protodocs/proto"},next:{title:"medic_apply",permalink:"/cli/medic_apply"}},c={},p=[{value:"medic",id:"medic",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"SEE ALSO",id:"see-also",level:3}],m={toc:p},d="wrapper";function s(e){let{components:t,...i}=e;return(0,a.kt)(d,(0,r.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"medic"},"medic"),(0,a.kt)("p",null,"medic controls mediator via the control plane"),(0,a.kt)("h3",{id:"synopsis"},"Synopsis"),(0,a.kt)("p",null,"For more information about mediator, please visit:\n",(0,a.kt)("a",{parentName:"p",href:"https://docs.stacklok.com/mediator/medic/overview.html"},"https://docs.stacklok.com/mediator/medic/overview.html")),(0,a.kt)("h3",{id:"options"},"Options"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'      --config string      config file (default is $PWD/config.yaml)\n      --grpc-host string   Server host (default "localhost")\n      --grpc-port int      Server port (default 8090)\n  -h, --help               help for medic\n')),(0,a.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/cli/medic_apply"},"medic apply"),"\t - Appy a configuration to a mediator control plane"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/cli/medic_auth"},"medic auth"),"\t - Authorize and manage accounts within a mediator control plane"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/cli/medic_completion"},"medic completion"),"\t - Generate the autocompletion script for the specified shell"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/cli/medic_docs"},"medic docs"),"\t - Generates documentation for the client"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/cli/medic_enroll"},"medic enroll"),"\t - Manage enrollments within a mediator control plane"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/cli/medic_group"},"medic group"),"\t - Manage groups within a mediator control plane"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/cli/medic_keys"},"medic keys"),"\t - Manage keys within a mediator control plane"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/cli/medic_org"},"medic org"),"\t - Manage organizations within a mediator control plane"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/cli/medic_policy"},"medic policy"),"\t - Manage policies within a mediator control plane"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/cli/medic_policy_status"},"medic policy_status"),"\t - Manage policy status within a mediator control plane"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/cli/medic_policy_type"},"medic policy_type"),"\t - Manage policy types within a mediator control plane"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/cli/medic_policy_violation"},"medic policy_violation"),"\t - Manage policy violations within a mediator control plane"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/cli/medic_repo"},"medic repo"),"\t - Manage repositories within a mediator control plane"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/cli/medic_role"},"medic role"),"\t - Manage roles within a mediator control plane"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/cli/medic_rule_type"},"medic rule_type"),"\t - Manage rule types within a mediator control plane"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/cli/medic_user"},"medic user"),"\t - Manage users within a mediator control plane")))}s.isMDXComponent=!0}}]);