"use strict";(self.webpackChunkstacklok=self.webpackChunkstacklok||[]).push([[8878],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),u=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=u(r),m=a,f=d["".concat(p,".").concat(m)]||d[m]||c[m]||l;return r?n.createElement(f,o(o({ref:t},s),{},{components:r})):n.createElement(f,o({ref:t},s))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[d]="string"==typeof e?e:a,o[1]=i;for(var u=2;u<l;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},33479:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>y,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var n=r(87462),a=(r(67294),r(3905));const l={title:"Auto-remediation via pull request",sidebar_position:30},o="Creating a Pull Request for Autoremediation",i={unversionedId:"how-to/remediate-pullrequest",id:"how-to/remediate-pullrequest",title:"Auto-remediation via pull request",description:"Prerequisites",source:"@site/docs/how-to/remediate-pullrequest.md",sourceDirName:"how-to",slug:"/how-to/remediate-pullrequest",permalink:"/how-to/remediate-pullrequest",draft:!1,tags:[],version:"current",sidebarPosition:30,frontMatter:{title:"Auto-remediation via pull request",sidebar_position:30},sidebar:"minder",previous:{title:"Creating a profile",permalink:"/how-to/create_profile"}},p={},u=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Create a rule type that has support for pull request auto remediation",id:"create-a-rule-type-that-has-support-for-pull-request-auto-remediation",level:2},{value:"Create a profile",id:"create-a-profile",level:2},{value:"Limitations",id:"limitations",level:2}],s=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)},d=s("Tabs"),c=s("TabItem"),m={toc:u},f="wrapper";function y(e){let{components:t,...r}=e;return(0,a.kt)(f,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"creating-a-pull-request-for-autoremediation"},"Creating a Pull Request for Autoremediation"),(0,a.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"minder")," CLI application"),(0,a.kt)("li",{parentName:"ul"},"A Minder account"),(0,a.kt)("li",{parentName:"ul"},"An enrolled Provider (e.g., GitHub) and registered repositories")),(0,a.kt)("h2",{id:"create-a-rule-type-that-has-support-for-pull-request-auto-remediation"},"Create a rule type that has support for pull request auto remediation"),(0,a.kt)("p",null,"The pull request auto remediation feature provides the functionality to fix a failed rule type by creating a pull request.\nThis feature is only available for rule types that support it."),(0,a.kt)("p",null,"In this example, we will use a rule type that checks if a repository has Dependabot enabled. If it's not enabled, Minder\nwill create a pull request that enables Dependabot. The rule type is called ",(0,a.kt)("inlineCode",{parentName:"p"},"dependabot_configured.yaml")," and is one of\nthe reference rule types provided by the Minder team."),(0,a.kt)("p",null,"Fetch all the reference rules by cloning the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/stacklok/minder-rules-and-profiles"},"minder-rules-and-profiles repository"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/stacklok/minder-rules-and-profiles.git\n")),(0,a.kt)("p",null,"In that directory you can find all the reference rules and profiles."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cd minder-rules-and-profiles\n")),(0,a.kt)("p",null,"Create the ",(0,a.kt)("inlineCode",{parentName:"p"},"dependabot_configured")," rule type in Minder:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"minder rule_type create -f rule-types/github/dependabot_configured.yaml\n")),(0,a.kt)("h2",{id:"create-a-profile"},"Create a profile"),(0,a.kt)("p",null,"Next, create a profile that applies the rule to all registered repositories."),(0,a.kt)("p",null,"Create a new file called ",(0,a.kt)("inlineCode",{parentName:"p"},"profile.yaml"),".\nBased on your source code language, paste the following profile definition into the newly created file."),(0,a.kt)(d,{mdxType:"Tabs"},(0,a.kt)(c,{value:"go",label:"Go",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'---\nversion: v1\ntype: profile\nname: dependabot-profile\ncontext:\n  provider: github\nalert: "on"\nremediate: "on"\nrepository:\n  - type: dependabot_configured\n    def:\n      package_ecosystem: gomod\n      schedule_interval: weekly\n      apply_if_file: go.mod\n'))),(0,a.kt)(c,{value:"npm",label:"NPM",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'---\nversion: v1\ntype: profile\nname: dependabot-profile\ncontext:\n  provider: github\nalert: "on"\nremediate: "on"\nrepository:\n  - type: dependabot_configured\n    def:\n      package_ecosystem: npm\n      schedule_interval: weekly\n      apply_if_file: package.json\n')))),(0,a.kt)("p",null,"Create the profile in Minder:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"minder profile create -f profile.yaml\n")),(0,a.kt)("p",null,"Once the profile is created, Minder will monitor all of your registered repositories matching the expected ecosystem,\ni.e., Go, NPM, etc."),(0,a.kt)("p",null,"If a repository does not have Dependabot enabled, Minder will create a pull request with the necessary configuration\nto enable it. Alongside the pull request, Minder will also create a Security Advisory alert that will be present until the issue\nis resolved."),(0,a.kt)("h2",{id:"limitations"},"Limitations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The pull request auto remediation feature is only available for rule types that support it."),(0,a.kt)("li",{parentName:"ul"},"There's no support for creating pull requests that modify the content of existing files yet."),(0,a.kt)("li",{parentName:"ul"},"The created pull request should be closed manually if the issue is resolved through other means. The profile status and any related alerts will be updated/closed automatically.")))}y.isMDXComponent=!0}}]);