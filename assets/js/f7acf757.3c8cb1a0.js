"use strict";(self.webpackChunkstacklok=self.webpackChunkstacklok||[]).push([[5294],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=i,g=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(g,o(o({ref:t},c),{},{components:n})):r.createElement(g,o({ref:t},c))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},79357:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(87462),i=(n(67294),n(3905));const a={title:"Automatic Remediations",sidebar_position:70},o="Automatic Remediation with Minder",l={unversionedId:"getting_started/remediations",id:"getting_started/remediations",title:"Automatic Remediations",description:"In Enabling Secret Scanning, we wrote a rule to open a",source:"@site/docs/getting_started/remediations.md",sourceDirName:"getting_started",slug:"/getting_started/remediations",permalink:"/getting_started/remediations",draft:!1,tags:[],version:"current",sidebarPosition:70,frontMatter:{title:"Automatic Remediations",sidebar_position:70},sidebar:"minder",previous:{title:"Enabling Secret Scanning",permalink:"/getting_started/secret_scanning"},next:{title:"Profile Introduction",permalink:"/profile_engine/profile_introduction"}},s={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Creating a profile with <code>remediate: on</code>",id:"creating-a-profile-with-remediate-on",level:2},{value:"Current limitations",id:"current-limitations",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"automatic-remediation-with-minder"},"Automatic Remediation with Minder"),(0,i.kt)("p",null,"In ",(0,i.kt)("a",{parentName:"p",href:"/getting_started/secret_scanning"},"Enabling Secret Scanning"),", we wrote a rule to open a\nsecurity advisory when repo configuration drifted from the configured profile\nin Minder.  In this tutorial, we will show how Minder can automatically\nresolve the misconfiguration and ensure that enrolled repos have secret\nscanning enabled.  Secret scanning isone of several settings which can be\nmanaged by Minder.  When you apply a Minder profile to enrolled repositories,\nit will remediate (fix) the setting if it is changed to violate the profile."),(0,i.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/getting_started/install_cli"},"The ",(0,i.kt)("inlineCode",{parentName:"a"},"minder")," CLI application")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/getting_started/login"},"A Minder account")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/getting_started/login#enrolling-the-github-provider"},"An enrolled GitHub token")," that is either an Owner in the organization or an Admin on the repositories"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/getting_started/secret_scanning#register-repositories"},"A registered repository in Minder")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/getting_started/secret_scanning#creating-and-applying-profiles"},"The `secret_scanning`` rule type")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/getting_started/secret_scanning#creating-and-applying-profiles"},"A policy to open security advisories when secret scanning is off"))),(0,i.kt)("h2",{id:"creating-a-profile-with-remediate-on"},"Creating a profile with ",(0,i.kt)("inlineCode",{parentName:"h2"},"remediate: on")),(0,i.kt)("p",null,"Minder doesn't currently support editing profiles, so we will create a new profile with ",(0,i.kt)("inlineCode",{parentName:"p"},"remediate: on"),"."),(0,i.kt)("p",null,"Edit the YAML file of the ",(0,i.kt)("a",{parentName:"p",href:"/getting_started/secret_scanning#creating-and-applying-profiles"},"profile from the secret-scanning tutorial"),"\nand set the ",(0,i.kt)("inlineCode",{parentName:"p"},"remediate")," attribute to ",(0,i.kt)("inlineCode",{parentName:"p"},"on"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'---\nversion: v1\ntype: profile\nname: github-profile\ncontext:\n  provider: github\nalert: "on"\nremediate: "on"\nrepository:\n  - type: secret_scanning\n    def:\n      enabled: true\n')),(0,i.kt)("p",null,"Create the profile in Minder:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"minder profile create -f profile.yaml\n")),(0,i.kt)("p",null,"Check the status of the profile:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"minder profile_status list --profile github-profile\n")),(0,i.kt)("p",null,'With remediation on, the profile status should be "Success" when the repository has been updated to match the profile.\nIf you navigate to your repository settings with your browser, you should see that the secret scanning\nfeature is enabled. Toggling the feature off should trigger a new profile status check and the\nsecret scanning feature should be enabled again in GitHub.'),(0,i.kt)("h2",{id:"current-limitations"},"Current limitations"),(0,i.kt)("p",null,"At the time of writing, not all ",(0,i.kt)("inlineCode",{parentName:"p"},"rule_type")," objects support remediation. To find out which\nrule types support remediation, you can run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"minder rule_type get -i $ID -oyaml\n")),(0,i.kt)("p",null,"and look for the ",(0,i.kt)("inlineCode",{parentName:"p"},"remediate")," attribute. If it's not present, the rule type doesn't support\nremediation. Alternatively, browse the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/stacklok/minder-rules-and-profiles/tree/main/rule-types/github"},"rule types directory"),"\nof the minder-rules-and-profiles repository."),(0,i.kt)("p",null,"Furthermore, remediations that open a pull request such as the ",(0,i.kt)("inlineCode",{parentName:"p"},"dependabot")," rule type only attempt\nto replace the target file, overwriting its contents. This means that if you want to keep the current\nchanges, you need to merge the contents manually."))}d.isMDXComponent=!0}}]);