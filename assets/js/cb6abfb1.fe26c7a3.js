"use strict";(self.webpackChunkstacklok=self.webpackChunkstacklok||[]).push([[7185],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=i.createContext({}),c=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=c(e.components);return i.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},f=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),d=c(n),f=r,m=d["".concat(p,".").concat(f)]||d[f]||u[f]||o;return n?i.createElement(m,l(l({ref:t},s),{},{components:n})):i.createElement(m,l({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=f;var a={};for(var p in t)hasOwnProperty.call(t,p)&&(a[p]=t[p]);a.originalType=e,a[d]="string"==typeof e?e:r,l[1]=a;for(var c=2;c<o;c++)l[c]=n[c];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}f.displayName="MDXCreateElement"},74972:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var i=n(87462),r=(n(67294),n(3905));const o={title:"Code Scanning",sidebar_position:40},l="Code Scanning (CodeQL) Policy",a={unversionedId:"ref/policies/code_scanning",id:"ref/policies/code_scanning",title:"Code Scanning",description:"The following rule type is available for Code Scanning (CodeQL).",source:"@site/docs/ref/policies/code_scanning.md",sourceDirName:"ref/policies",slug:"/ref/policies/code_scanning",permalink:"/ref/policies/code_scanning",draft:!1,tags:[],version:"current",sidebarPosition:40,frontMatter:{title:"Code Scanning",sidebar_position:40},sidebar:"minder",previous:{title:"Dependabot",permalink:"/ref/policies/dependabot"},next:{title:"Secret Scanning",permalink:"/ref/policies/secrets"}},p={},c=[{value:"<code>codeql_enabled</code> - Verifies that CodeQL is enabled for the repository",id:"codeql_enabled---verifies-that-codeql-is-enabled-for-the-repository",level:2},{value:"Entity",id:"entity",level:3},{value:"Type",id:"type",level:3},{value:"Rule parameters",id:"rule-parameters",level:3},{value:"Rule definition options",id:"rule-definition-options",level:3}],s={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,i.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"code-scanning-codeql-policy"},"Code Scanning (CodeQL) Policy"),(0,r.kt)("p",null,"The following rule type is available for Code Scanning (CodeQL)."),(0,r.kt)("h2",{id:"codeql_enabled---verifies-that-codeql-is-enabled-for-the-repository"},(0,r.kt)("inlineCode",{parentName:"h2"},"codeql_enabled")," - Verifies that CodeQL is enabled for the repository"),(0,r.kt)("p",null,"This rule allows you to monitor if code scanning via CodeQL is enabled for your repositories.\nCodeQL is a tool that can be used to analyze code for security vulnerabilities.\nIt is recommended that repositories have some form of static analysis enabled\nto ensure that vulnerabilities are not introduced into the codebase."),(0,r.kt)("h3",{id:"entity"},"Entity"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"repository"))),(0,r.kt)("h3",{id:"type"},"Type"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"codeql_enabled"))),(0,r.kt)("h3",{id:"rule-parameters"},"Rule parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"None")),(0,r.kt)("h3",{id:"rule-definition-options"},"Rule definition options"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"codeql_enabled")," rule supports the following options:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"languages ([]string)")," - Only applicable for remediation. Sets the CodeQL languages to use in the workflow.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"CodeQL supports ",(0,r.kt)("inlineCode",{parentName:"li"},"c-cpp"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"csharp"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"go"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"java-kotlin"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"javascript-typescript"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"python"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"ruby"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"swift")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"schedule_interval (string, cron format)")," - Only applicable for remediation. Sets the schedule interval for the workflow.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Example: ",(0,r.kt)("inlineCode",{parentName:"li"},"20 14 * * 1")," (every Monday at 2:20pm)")))))}u.isMDXComponent=!0}}]);