"use strict";(self.webpackChunkstacklok=self.webpackChunkstacklok||[]).push([[9952],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),p=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=p(e.components);return o.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},y=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),y=r,f=u["".concat(c,".").concat(y)]||u[y]||d[y]||i;return n?o.createElement(f,a(a({ref:t},s),{},{components:n})):o.createElement(f,a({ref:t},s))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=y;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:r,a[1]=l;for(var p=2;p<i;p++)a[p]=n[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}y.displayName="MDXCreateElement"},29877:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var o=n(87462),r=(n(67294),n(3905));const i={id:"policy_introduction",title:"Policy Introduction",sidebar_position:1,slug:"/policy_introduction",displayed_sidebar:"mediator"},a="Policy Introduction",l={unversionedId:"policy_engine/policy_introduction",id:"policy_engine/policy_introduction",title:"Policy Introduction",description:"Mediator allows you to define policies for your software supply chain.",source:"@site/docs/policy_engine/policy_introduction.md",sourceDirName:"policy_engine",slug:"/policy_introduction",permalink:"/policy_introduction",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"policy_introduction",title:"Policy Introduction",sidebar_position:1,slug:"/policy_introduction",displayed_sidebar:"mediator"},sidebar:"mediator",previous:{title:"Register Repositories",permalink:"/register_repos"},next:{title:"Manage policies and violations",permalink:"/manage_policies"}},c={},p=[],s={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"policy-introduction"},"Policy Introduction"),(0,r.kt)("p",null,"Mediator allows you to define policies for your software supply chain."),(0,r.kt)("p",null,"The anatomy of a policy is the policy itself, which outlines the rules to be\nchecked, the rule types, and the evaluation engine."),(0,r.kt)("p",null,"As of time of writing, mediator supports the following evaluation engines:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://www.openpolicyagent.org/"},"Open Policy Agent"))," (OPA) policy language."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://jqlang.github.io/jq/"},"JQ"))," - a lightweight and flexible command-line JSON processor.")),(0,r.kt)("p",null,"Each engine is designed to be extensible, allowing you to integrate your own\nlogic and processes."),(0,r.kt)("p",null,"Please see the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/stacklok/mediator/tree/main/examples"},"examples")," directory for examples of policies, and ",(0,r.kt)("a",{parentName:"p",href:"/manage_policies"},"Manage Policies")," for more details on how to set up policies and rule types."))}d.isMDXComponent=!0}}]);