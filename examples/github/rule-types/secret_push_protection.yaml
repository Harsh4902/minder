---
version: v1
type: rule-type
name: secret_push_protection
context:
  provider: github
  group: Root Group
description: Verfies that secret push protection is enabled for a given repository.
guidance: |
  You can use secret scanning to prevent supported secrets from being pushed into your repository by enabling secret scanning push protection.

  For more information on how to configure this, see
  https://docs.github.com/en/code-security/secret-scanning/push-protection-for-repositories-and-organizations#enabling-secret-scanning-as-a-push-protection-for-a-repository
def:
  # Defines the section of the pipeline the rule will appear in.
  # This will affect the template that is used to render multiple parts
  # of the rule.
  in_entity: repository
  # Defines the schema for writing a rule with this rule being checked
  rule_schema:
    properties:
      enabled:
        type: boolean
        default: true
  # Limits the rule to only run on repositories with events that match the
  # given filter.
  reconcile_signals:
    - security_and_analysis
  # Defines the configuration for ingesting data relevant for the rule
  ingest:
    type: rest
    rest:
      # This is the path to the data source. Given that this will evaluate
      # for each repository in the organization, we use a template that
      # will be evaluated for each repository. The structure to use is the
      # protobuf structure for the entity that is being evaluated.
      endpoint: "/repos/{{.Entity.Owner}}/{{.Entity.Repository}}"
      # This is the method to use to retrieve the data. It should already default to JSON
      parse: json
  # Defines the configuration for evaluating data ingested against the given policy
  eval:
    type: jq
    jq:
      # Ingested points to the data retrieved in the `ingest` section
      - ingested:
          def: '.security_and_analysis.secret_scanning_push_protection.status == "enabled"'
        # policy points to the policy itself.
        policy:
          def: ".enabled"
